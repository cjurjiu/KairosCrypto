apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion "$config.build_versions.compileSdkVersion".toInteger()

    defaultConfig {
        minSdkVersion "$config.build_versions.minSdkVersion".toInteger()
        targetSdkVersion "$config.build_versions.targetSdkVersion".toInteger()

        applicationId "com.catalinj.cryptosmart"
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        //add the kotlin folder as a sources folder
        main.java.srcDirs += 'src/main/kotlin'
        //add the schemas folder as an asset for the tests
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    kapt {
        arguments {
            ["room.schemaLocation": "$projectDir/schemas".toString()]
        }
    }

    compileOptions {
        targetCompatibility "$config.build_versions.targetCompatibility"
        sourceCompatibility "$config.build_versions.targetCompatibility"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //kotlin stdlib
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$config.lib_versions.kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$config.lib_versions.kotlin"
    //support libraries
    implementation "com.android.support:support-v4:$config.lib_versions.support_library"
    implementation "com.android.support:appcompat-v7:$config.lib_versions.support_library"
    implementation "com.android.support:design:$config.lib_versions.support_library"
    //recyclerview
    implementation "com.android.support:recyclerview-v7:$config.lib_versions.support_library"
    //constraint layout
    implementation "com.android.support.constraint:constraint-layout:$config.lib_versions.constraint_layout"
    //play services
    implementation "com.google.android.gms:play-services-plus:$config.lib_versions.play_services_plus"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$config.lib_versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$config.lib_versions.converter_gson"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$config.lib_versions.retrofit_rxadapter"
    //gson
    implementation "com.google.code.gson:gson:$config.lib_versions.gson"
    //dagger2
    implementation "com.google.dagger:dagger:$config.lib_versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$config.lib_versions.dagger_compiler"
    //viewmodel & extensions
    implementation "android.arch.lifecycle:viewmodel:$config.lib_versions.viewmodel"
    implementation "android.arch.lifecycle:extensions:$config.lib_versions.extensions"
    //room
    implementation "android.arch.persistence.room:runtime:$config.lib_versions.room"
    // RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$config.lib_versions.room"
    kapt "android.arch.persistence.room:compiler:$config.lib_versions.room"
    //rxjava
    implementation "io.reactivex.rxjava2:rxjava:$config.lib_versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$config.lib_versions.rxandroid"
    implementation "com.jakewharton.rxrelay2:rxrelay:$config.lib_versions.rxrelay"

    //local dependencies
    implementation project(':smartpersist')
    implementation project(':common')
    implementation project(':cryptodrawablesprovider')
    //leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$config.lib_versions.leak_canary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$config.lib_versions.leak_canary"
    //test
    //TODO testing was not taken into consideration so far.
    //Add testing support
    testImplementation "junit:junit:$config.lib_versions.junit"
    //instrumentation tests
    androidTestImplementation "android.arch.persistence.room:testing:$config.lib_versions.room"
    androidTestImplementation "com.android.support.test:runner:$config.lib_versions.android_test_runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$config.lib_versions.espresso_core"
}
