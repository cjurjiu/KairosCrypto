apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion "$config.build_versions.compileSdkVersion".toInteger()

    defaultConfig {
        minSdkVersion "$config.build_versions.minSdkVersion".toInteger()
        targetSdkVersion "$config.build_versions.targetSdkVersion".toInteger()

        applicationId "com.catalinjurjiu.kairoscrypto"
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        //add the kotlin folder as a sources folder
        main.java.srcDirs += 'src/main/kotlin'
        //add the schemas folder as an asset for the tests
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    compileOptions {
        targetCompatibility "$config.build_versions.targetCompatibility"
        sourceCompatibility "$config.build_versions.sourceCompatibility"
    }

}

//config java & kotlin compiler to support java8 features
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = "$config.build_versions.sourceCompatibility"
    targetCompatibility = "$config.build_versions.targetCompatibility"

    kotlinOptions {
        jvmTarget = "$config.build_versions.targetCompatibility"
        apiVersion = "$config.build_versions.kotlin_api_version"
        languageVersion = "$config.build_versions.kotlin_language_version"
    }
}

dependencies {
    //kotlin stdlib
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$config.lib_versions.kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$config.lib_versions.kotlin"

    //support libraries
    implementation "com.android.support:support-v4:$config.lib_versions.support_library"
    implementation "com.android.support:appcompat-v7:$config.lib_versions.support_library"
    implementation "com.android.support:design:$config.lib_versions.support_library"

    //recyclerview
    implementation "com.android.support:recyclerview-v7:$config.lib_versions.support_library"

    //constraint layout
    implementation "com.android.support.constraint:constraint-layout:$config.lib_versions.constraint_layout"

    //play services
    implementation "com.google.android.gms:play-services-plus:$config.lib_versions.play_services_plus"

    //viewmodel & extensions
    implementation "android.arch.lifecycle:viewmodel:$config.lib_versions.viewmodel"
    implementation "android.arch.lifecycle:extensions:$config.lib_versions.extensions"
    implementation "android.arch.lifecycle:common-java8:$config.lib_versions.extensions"

    //material loading library
    implementation "me.zhanghai.android.materialprogressbar:library:$config.lib_versions.material_progress"

    //wheelbarrow
    implementation "com.catalinjurjiu:wheelbarrow:$config.lib_versions.wheelbarrow"

    //dagger2
    implementation "com.google.dagger:dagger:$config.lib_versions.dagger"
    implementation 'com.android.support:support-v4:27.1.1'
    kapt "com.google.dagger:dagger-compiler:$config.lib_versions.dagger_compiler"

    //rxjava
    implementation "io.reactivex.rxjava2:rxjava:$config.lib_versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$config.lib_versions.rxandroid"
    implementation "com.jakewharton.rxrelay2:rxrelay:$config.lib_versions.rxrelay"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$config.lib_versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$config.lib_versions.converter_gson"
    implementation "com.squareup.retrofit2:converter-scalars:$config.lib_versions.converter_scalars"

    //local dependencies
    implementation project(':businesslayer')
    implementation project(':datalayer')
    implementation project(':common')
    implementation project(':cryptodrawablesprovider')

    //leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$config.lib_versions.leak_canary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$config.lib_versions.leak_canary"

    //TODO testing was not taken into consideration so far.
    //Add testing support
    testImplementation "junit:junit:$config.lib_versions.junit"

    //instrumentation tests
    androidTestImplementation "android.arch.persistence.room:testing:$config.lib_versions.room"
    androidTestImplementation "com.android.support.test:runner:$config.lib_versions.android_test_runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$config.lib_versions.espresso_core"
}
